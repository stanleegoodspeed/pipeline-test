AWSTemplateFormatVersion: "2010-09-09"

Description: >
  AWS CloudFormation Sample Template Continuous Delievery: This template
  builds an AWS CodePipeline pipeline that implements a continuous delivery release
  process for AWS CloudFormation stacks. Submit a CloudFormation source artifact
  to an Amazon S3 location before building the pipeline. The pipeline uses the
  artifact to automatically create stacks and change sets.
  **WARNING** This template creates an Amazon EC2 instance. You will be billed
  for the AWS resources used when you create a stack using this template.

Parameters:
  PipelineName:
    Description: A name for pipeline
    Type: String
  ArtifactS3Bucket:
    Description: An existing bucket to store artifacts
    Type: String
  GithubOwner:
    Default: stanleegoodspeed
    Description: The owner of the repo that contains the source artifact
    Type: String
  GithubRepo:
    Description: The name of the repo that contains the source artifact
    Type: String
  GithubBranch:
    Default: master
    Description: The branch within the repo
    Type: String
  GithubOAuthToken:
    Description: The OAuth token for the repo
    Type: String
  EnvStackName:
    Default: a-site
    Description: A name for the stack
    Type: String
  EnvStackConfig:
    Default: infrastructure/config.json
    Description: The configuration file name for the stack
    Type: String
  TemplateFileName:
    Default: infrastructure/master.yml
    Description: The file name of the template
    Type: String

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "CodePipeline Settings"
        Parameters:
          - PipelineName
          - ArtifactS3Bucket
          - GithubOwner
          - GithubRepo
          - GithubBranch
          - GithubOAuthToken
      - Label:
          default: "Stack Settings"
        Parameters:
          - EnvStackName
          - EnvStackConfig
          - TemplateFileName
          
Resources:
  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref ArtifactS3Bucket
        Type: S3
      DisableInboundStageTransitions: []
      Name: !Ref 'PipelineName'
      RoleArn: !GetAtt [PipelineRole, Arn]
      Stages:
        - Name: SourceArtifact
          Actions:
            - Name: GitHub
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: '1'
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                Owner: !Ref GithubOwner
                Repo: !Ref GithubRepo
                Branch: !Ref GithubBranch
                OAuthToken: !Ref GithubOAuthToken
        - Name: SourceDeploy
          Actions:
            - Name: CreateStack
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: SourceArtifact
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt [CFNRole, Arn]
                StackName: !Ref EnvStackName
                TemplateConfiguration: !Sub "SourceArtifact::${EnvStackConfig}"
                TemplatePath: !Sub "SourceArtifact::${TemplateFileName}"
                Capabilities: CAPABILITY_NAMED_IAM

  CFNRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [cloudformation.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CloudFormationRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - '*'
                Effect: Allow
                Resource: '*'
              
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codepipeline.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 's3:*'
                - 'cloudformation:CreateStack'
                - 'cloudformation:DescribeStacks'
                - 'cloudformation:UpdateStack'
                - 'cloudformation:SetStackPolicy'
                - 'iam:PassRole'
                - 'sns:Publish'
                Effect: Allow
                Resource: '*'